name: Build & push containers
# "on push" includes merged pull requests

on:
  push:
    tags:
      - "testing-runner-v*.*.*"
      - "release-runner-v*.*.*"
      - "testing-scheduler-v*.*.*"
      - "release-scheduler-v*.*.*"
      - "testing-starter-v*.*.*"
      - "release-starter-v*.*.*"

jobs:

  # Generate Matrix with "testing" or "release" job depending on gitub.ref
  matrix-init:
    runs-on: ubuntu-latest
    env:

      # set ref prefix
      ref-prefix-testing: refs/tags/testing
      ref-prefix-release: refs/tags/release

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:

      - id: extract_github_ref_prefix
        run: echo "github_ref_prefix=$(echo ${{ github.ref }} | awk -F/ '{print $3}' | awk -Fv '{print $1}')" >> $GITHUB_OUTPUT
      - id: extract_github_ref_component
        run: echo "github_ref_component=$(echo ${{ github.ref }} | awk -F/ '{print $3}' | awk -F- '{print $2}')" >> $GITHUB_OUTPUT

      - id: set-matrix
        run: |
          if [[ "${{ github.ref }}" == ${{ env.ref-prefix-testing }}* ]]; then
            dynamic_includes='[{"dockerfile": "./${{ steps.extract_github_ref_component.outputs.github_ref_component }}/Dockerfile", "image": "seatable/seatable-python-${{ steps.extract_github_ref_component.outputs.github_ref_component }}", "context": "${{ steps.extract_github_ref_component.outputs.github_ref_component }}", "version_prefix": "testing-"}]'
          elif [[ "${{ github.ref }}" == ${{ env.ref-prefix-release }}* ]]; then
            dynamic_includes='[{"dockerfile": "./${{ steps.extract_github_ref_component.outputs.github_ref_component }}/Dockerfile", "image": "seatable/seatable-python-${{ steps.extract_github_ref_component.outputs.github_ref_component }}", "context": "${{ steps.extract_github_ref_component.outputs.github_ref_component }}", "version_prefix": ""}]'
          fi
          echo "matrix={'include': $dynamic_includes}" >> $GITHUB_OUTPUT

  build-image-on-push:
    runs-on: ubuntu-latest
    needs:
      - matrix-init
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix-init.outputs.matrix) }}

    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set short git commit SHA
        id: get_commit
        run: echo "short_sha=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_OUTPUT
      - id: extract_github_ref_version
        run: echo "version=$(echo ${{ github.ref }} | awk -F/ '{print $3}' | awk -Fv '{print $2}')" >> $GITHUB_OUTPUT
      - id: extract_github_ref_component
        run: echo "github_ref_component=$(echo ${{ github.ref }} | awk -F/ '{print $3}' | awk -F- '{print $2}')" >> $GITHUB_OUTPUT

      # writes version file
      - name: Write version to file
        run: |
          echo "${{ steps.extract_github_ref_version.outputs.version }}" > "${{ steps.extract_github_ref_component.outputs.github_ref_component }}/version"

      # - name: Read version files
      #   id: "get_version_from_file"
      #   run: echo "version=$(cat ./${{ matrix.context }}/version)" >> $GITHUB_OUTPUT



      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        if: ${{ startsWith(github.ref, matrix.ref) }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            seatable/seatable-python-${{ matrix.context }}:build-${{ github.run_number }}
            seatable/seatable-python-${{ matrix.context }}:commit-${{ steps.get_commit.outputs.short_sha }}
            seatable/seatable-python-${{ matrix.context }}:${{ matrix.version_prefix }}${{ steps.extract_github_ref_version.outputs.version }}
          labels: |
            org.opencontainers.image.title=seatable/seatable-python-${{ matrix.context }}
            org.opencontainers.image.version=${{ matrix.version_prefix }}${{ steps.extract_github_ref_version.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            org.opencontainers.image.authors=SeaTable
            org.opencontainers.image.url=https://www.seatable.io/
            org.opencontainers.image.documentation=https://admin.seatable.io/
            org.opencontainers.image.vendor=SeaTable
