# name: Check Pip Package Version / Build & publish containers
# ## Run once a month on the 1st day of the month

# on:
#   schedule:
#     - cron: '0 0 1 * *'

# jobs:
#   check-pip-package-version:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Pull Docker container
#         run: docker pull seatable/python-runner-cicd

#       - name: Spin up Docker container
#         run: docker run --rm -d --name seatable-python-runner seatable/python-runner-cicd

#       - name: Needs Update / Check pip package version
#         id: pypi-version-check
#         run: |
#           pip_version=$(docker exec seatable-python-runner pip show seatable-api | grep Version | cut -d ' ' -f 2)
#           if [ "$pip_version" = "<desired-version>" ]; then
#             echo "needs-updating=false" >> $GITHUB_OUTPUT
#           else
#             echo "needs-updating=true" >> $GITHUB_OUTPUT
#           fi

#       - name: Stop and remove Docker container
#         run: docker stop seatable-runner


#         ## pypi api call and get latest version = desired version
#         ## if not equal, build and publish container

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build and push
#         uses: docker/build-push-action@v5
#         with:
#           context: ./runner
#           push: true
#           file: ./runner/Dockerfile
#           tags: >
#             ${{ matrix.image }}:latest ,
#             ${{ matrix.image }}:build_onpypi_${{ github.run_number }}
#         if: steps.pypi-version-check.outputs.needs-updating == 'true'
